/* tslint:disable */
/* eslint-disable */
/**
 * BMLT
 * BMLT Admin API Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserBase
 */
export interface UserBase {
    /**
     * 
     * @type {string}
     * @memberof UserBase
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof UserBase
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof UserBase
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserBase
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof UserBase
     */
    email?: string;
    /**
     * 
     * @type {number}
     * @memberof UserBase
     */
    ownerId?: number;
}

/**
 * Check if a given object implements the UserBase interface.
 */
export function instanceOfUserBase(value: object): value is UserBase {
    return true;
}

export function UserBaseFromJSON(json: any): UserBase {
    return UserBaseFromJSONTyped(json, false);
}

export function UserBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserBase {
    if (json == null) {
        return json;
    }
    return {
        
        'username': json['username'] == null ? undefined : json['username'],
        'type': json['type'] == null ? undefined : json['type'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'description': json['description'] == null ? undefined : json['description'],
        'email': json['email'] == null ? undefined : json['email'],
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
    };
}

export function UserBaseToJSON(json: any): UserBase {
    return UserBaseToJSONTyped(json, false);
}

export function UserBaseToJSONTyped(value?: UserBase | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'username': value['username'],
        'type': value['type'],
        'displayName': value['displayName'],
        'description': value['description'],
        'email': value['email'],
        'ownerId': value['ownerId'],
    };
}

