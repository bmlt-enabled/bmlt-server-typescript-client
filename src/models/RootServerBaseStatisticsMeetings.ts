/* tslint:disable */
/* eslint-disable */
/**
 * BMLT
 * BMLT Admin API Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RootServerBaseStatisticsMeetings
 */
export interface RootServerBaseStatisticsMeetings {
    /**
     * 
     * @type {number}
     * @memberof RootServerBaseStatisticsMeetings
     */
    numTotal: number;
    /**
     * 
     * @type {number}
     * @memberof RootServerBaseStatisticsMeetings
     */
    numInPerson: number;
    /**
     * 
     * @type {number}
     * @memberof RootServerBaseStatisticsMeetings
     */
    numVirtual: number;
    /**
     * 
     * @type {number}
     * @memberof RootServerBaseStatisticsMeetings
     */
    numHybrid: number;
    /**
     * 
     * @type {number}
     * @memberof RootServerBaseStatisticsMeetings
     */
    numUnknown: number;
}

/**
 * Check if a given object implements the RootServerBaseStatisticsMeetings interface.
 */
export function instanceOfRootServerBaseStatisticsMeetings(value: object): value is RootServerBaseStatisticsMeetings {
    if (!('numTotal' in value) || value['numTotal'] === undefined) return false;
    if (!('numInPerson' in value) || value['numInPerson'] === undefined) return false;
    if (!('numVirtual' in value) || value['numVirtual'] === undefined) return false;
    if (!('numHybrid' in value) || value['numHybrid'] === undefined) return false;
    if (!('numUnknown' in value) || value['numUnknown'] === undefined) return false;
    return true;
}

export function RootServerBaseStatisticsMeetingsFromJSON(json: any): RootServerBaseStatisticsMeetings {
    return RootServerBaseStatisticsMeetingsFromJSONTyped(json, false);
}

export function RootServerBaseStatisticsMeetingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RootServerBaseStatisticsMeetings {
    if (json == null) {
        return json;
    }
    return {
        
        'numTotal': json['numTotal'],
        'numInPerson': json['numInPerson'],
        'numVirtual': json['numVirtual'],
        'numHybrid': json['numHybrid'],
        'numUnknown': json['numUnknown'],
    };
}

export function RootServerBaseStatisticsMeetingsToJSON(json: any): RootServerBaseStatisticsMeetings {
    return RootServerBaseStatisticsMeetingsToJSONTyped(json, false);
}

export function RootServerBaseStatisticsMeetingsToJSONTyped(value?: RootServerBaseStatisticsMeetings | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'numTotal': value['numTotal'],
        'numInPerson': value['numInPerson'],
        'numVirtual': value['numVirtual'],
        'numHybrid': value['numHybrid'],
        'numUnknown': value['numUnknown'],
    };
}

