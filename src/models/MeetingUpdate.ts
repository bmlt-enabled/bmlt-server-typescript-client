/* tslint:disable */
/* eslint-disable */
/**
 * BMLT
 * BMLT Admin API Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MeetingUpdate
 */
export interface MeetingUpdate {
    /**
     * 
     * @type {number}
     * @memberof MeetingUpdate
     */
    serviceBodyId: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof MeetingUpdate
     */
    formatIds: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof MeetingUpdate
     */
    venueType: number;
    /**
     * 
     * @type {boolean}
     * @memberof MeetingUpdate
     */
    temporarilyVirtual?: boolean;
    /**
     * 
     * @type {number}
     * @memberof MeetingUpdate
     */
    day: number;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    startTime: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    duration: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    timeZone?: string;
    /**
     * 
     * @type {number}
     * @memberof MeetingUpdate
     */
    latitude: number;
    /**
     * 
     * @type {number}
     * @memberof MeetingUpdate
     */
    longitude: number;
    /**
     * 
     * @type {boolean}
     * @memberof MeetingUpdate
     */
    published: boolean;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    worldId?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    locationText?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    locationInfo?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    locationStreet?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    locationNeighborhood?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    locationCitySubsection?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    locationMunicipality?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    locationSubProvince?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    locationProvince?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    locationPostalCode1?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    locationNation?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    phoneMeetingNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    virtualMeetingLink?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    virtualMeetingAdditionalInfo?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    contactName1?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    contactName2?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    contactPhone1?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    contactPhone2?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    contactEmail1?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    contactEmail2?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    busLines?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    trainLines?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingUpdate
     */
    comments?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof MeetingUpdate
     */
    customFields?: { [key: string]: string; };
}

/**
 * Check if a given object implements the MeetingUpdate interface.
 */
export function instanceOfMeetingUpdate(value: object): value is MeetingUpdate {
    if (!('serviceBodyId' in value) || value['serviceBodyId'] === undefined) return false;
    if (!('formatIds' in value) || value['formatIds'] === undefined) return false;
    if (!('venueType' in value) || value['venueType'] === undefined) return false;
    if (!('day' in value) || value['day'] === undefined) return false;
    if (!('startTime' in value) || value['startTime'] === undefined) return false;
    if (!('duration' in value) || value['duration'] === undefined) return false;
    if (!('latitude' in value) || value['latitude'] === undefined) return false;
    if (!('longitude' in value) || value['longitude'] === undefined) return false;
    if (!('published' in value) || value['published'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function MeetingUpdateFromJSON(json: any): MeetingUpdate {
    return MeetingUpdateFromJSONTyped(json, false);
}

export function MeetingUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): MeetingUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'serviceBodyId': json['serviceBodyId'],
        'formatIds': json['formatIds'],
        'venueType': json['venueType'],
        'temporarilyVirtual': json['temporarilyVirtual'] == null ? undefined : json['temporarilyVirtual'],
        'day': json['day'],
        'startTime': json['startTime'],
        'duration': json['duration'],
        'timeZone': json['timeZone'] == null ? undefined : json['timeZone'],
        'latitude': json['latitude'],
        'longitude': json['longitude'],
        'published': json['published'],
        'email': json['email'] == null ? undefined : json['email'],
        'worldId': json['worldId'] == null ? undefined : json['worldId'],
        'name': json['name'],
        'locationText': json['location_text'] == null ? undefined : json['location_text'],
        'locationInfo': json['location_info'] == null ? undefined : json['location_info'],
        'locationStreet': json['location_street'] == null ? undefined : json['location_street'],
        'locationNeighborhood': json['location_neighborhood'] == null ? undefined : json['location_neighborhood'],
        'locationCitySubsection': json['location_city_subsection'] == null ? undefined : json['location_city_subsection'],
        'locationMunicipality': json['location_municipality'] == null ? undefined : json['location_municipality'],
        'locationSubProvince': json['location_sub_province'] == null ? undefined : json['location_sub_province'],
        'locationProvince': json['location_province'] == null ? undefined : json['location_province'],
        'locationPostalCode1': json['location_postal_code_1'] == null ? undefined : json['location_postal_code_1'],
        'locationNation': json['location_nation'] == null ? undefined : json['location_nation'],
        'phoneMeetingNumber': json['phone_meeting_number'] == null ? undefined : json['phone_meeting_number'],
        'virtualMeetingLink': json['virtual_meeting_link'] == null ? undefined : json['virtual_meeting_link'],
        'virtualMeetingAdditionalInfo': json['virtual_meeting_additional_info'] == null ? undefined : json['virtual_meeting_additional_info'],
        'contactName1': json['contact_name_1'] == null ? undefined : json['contact_name_1'],
        'contactName2': json['contact_name_2'] == null ? undefined : json['contact_name_2'],
        'contactPhone1': json['contact_phone_1'] == null ? undefined : json['contact_phone_1'],
        'contactPhone2': json['contact_phone_2'] == null ? undefined : json['contact_phone_2'],
        'contactEmail1': json['contact_email_1'] == null ? undefined : json['contact_email_1'],
        'contactEmail2': json['contact_email_2'] == null ? undefined : json['contact_email_2'],
        'busLines': json['bus_lines'] == null ? undefined : json['bus_lines'],
        'trainLines': json['train_lines'] == null ? undefined : json['train_lines'],
        'comments': json['comments'] == null ? undefined : json['comments'],
        'customFields': json['customFields'] == null ? undefined : json['customFields'],
    };
}

export function MeetingUpdateToJSON(json: any): MeetingUpdate {
    return MeetingUpdateToJSONTyped(json, false);
}

export function MeetingUpdateToJSONTyped(value?: MeetingUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'serviceBodyId': value['serviceBodyId'],
        'formatIds': value['formatIds'],
        'venueType': value['venueType'],
        'temporarilyVirtual': value['temporarilyVirtual'],
        'day': value['day'],
        'startTime': value['startTime'],
        'duration': value['duration'],
        'timeZone': value['timeZone'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'published': value['published'],
        'email': value['email'],
        'worldId': value['worldId'],
        'name': value['name'],
        'location_text': value['locationText'],
        'location_info': value['locationInfo'],
        'location_street': value['locationStreet'],
        'location_neighborhood': value['locationNeighborhood'],
        'location_city_subsection': value['locationCitySubsection'],
        'location_municipality': value['locationMunicipality'],
        'location_sub_province': value['locationSubProvince'],
        'location_province': value['locationProvince'],
        'location_postal_code_1': value['locationPostalCode1'],
        'location_nation': value['locationNation'],
        'phone_meeting_number': value['phoneMeetingNumber'],
        'virtual_meeting_link': value['virtualMeetingLink'],
        'virtual_meeting_additional_info': value['virtualMeetingAdditionalInfo'],
        'contact_name_1': value['contactName1'],
        'contact_name_2': value['contactName2'],
        'contact_phone_1': value['contactPhone1'],
        'contact_phone_2': value['contactPhone2'],
        'contact_email_1': value['contactEmail1'],
        'contact_email_2': value['contactEmail2'],
        'bus_lines': value['busLines'],
        'train_lines': value['trainLines'],
        'comments': value['comments'],
        'customFields': value['customFields'],
    };
}

