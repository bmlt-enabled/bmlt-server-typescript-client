/* tslint:disable */
/* eslint-disable */
/**
 * BMLT
 * BMLT Admin API Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserUpdate
 */
export interface UserUpdate {
    /**
     * 
     * @type {string}
     * @memberof UserUpdate
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof UserUpdate
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof UserUpdate
     */
    displayName: string;
    /**
     * 
     * @type {string}
     * @memberof UserUpdate
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof UserUpdate
     */
    email?: string;
    /**
     * 
     * @type {number}
     * @memberof UserUpdate
     */
    ownerId?: number;
    /**
     * 
     * @type {string}
     * @memberof UserUpdate
     */
    password?: string;
}

/**
 * Check if a given object implements the UserUpdate interface.
 */
export function instanceOfUserUpdate(value: object): value is UserUpdate {
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    return true;
}

export function UserUpdateFromJSON(json: any): UserUpdate {
    return UserUpdateFromJSONTyped(json, false);
}

export function UserUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'username': json['username'],
        'type': json['type'],
        'displayName': json['displayName'],
        'description': json['description'] == null ? undefined : json['description'],
        'email': json['email'] == null ? undefined : json['email'],
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
        'password': json['password'] == null ? undefined : json['password'],
    };
}

export function UserUpdateToJSON(json: any): UserUpdate {
    return UserUpdateToJSONTyped(json, false);
}

export function UserUpdateToJSONTyped(value?: UserUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'username': value['username'],
        'type': value['type'],
        'displayName': value['displayName'],
        'description': value['description'],
        'email': value['email'],
        'ownerId': value['ownerId'],
        'password': value['password'],
    };
}

